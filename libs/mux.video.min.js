const CHROME=navigator.userAgent.includes("Chrome")?chrome:browser;(t=>{async function e(e,a,i){return new Promise((s,t)=>{try{CHROME.runtime.sendMessage({cmd:"FETCH_DATA",parameter:{url:e,headers:a,method:i}},function(t){t.ok&&(t.content=new Uint8Array(t.content)),s(t)})}catch(t){s({ok:!1,message:t.name})}})}async function a(e){return new Promise((t,s)=>{setTimeout(t,e)})}Object.assign(t,{Manifest:class{constructor(t,s){this.id=Math.floor(1e8*Math.random()),this.name=t.filename,this.title=t.title,this.contentType=t.contentType,this.format=t.format,this.headers=t.headers,this.url=t.url,this.method=t.method,this.downloadUI=s,this.fragments=[],this.fragmentsCount=0,this.range=1572864,this.status="normal",this.requestError=0,this.sizePrev=0,this.size=t.size,this.speeder=null,this.cached=0,this.threads=0,this.threadsLimit=4,this.timeSpent=3}load(){let t=0,s=this.range-1,e=!0,a=0;for(;e;)s>=this.size&&(s="",e=!1),this.fragments.push({start:t,end:s,data:null,status:"pending"}),a++,t=s+1,s+=this.range;this.fragmentsCount=a,this.downloadUI.loadSuccess(this.size,this.name,this.format),this.downloadUI.createThreadsControls(this.threadsLimit),this.start()}start(){"pause"===this.status&&(this.status="normal"),this.sizePrev=0,this.requestError=0;this.speeder||(this.speeder=setInterval(function(s){if("pause"===s.status||"error"===s.status||"cancel"===s.status||"completed"===s.status)clearInterval(s.speeder),s.speeder=null,s.downloadUI.setSpeed(0),s.downloadUI.setThreads(0);else{let t=0;s.sizePrev&&(t=Math.round(s.sizePrev/3)),s.downloadUI.setTimeSpent(s.timeSpent),s.downloadUI.setSpeed(t),s.sizePrev=0,s.timeSpent=s.timeSpent+3}},3e3,this)),this.fetch(),this.downloadUI.start(),this.downloadUI.setErrorRequest(0)}pause(){this.status="pause",this.downloadUI.pause()}cancel(){this.status="cancel",this.downloadUI.cancel()}async completed(){this.status="completed";var s=await this.flush();if(s){let t=this.name;var e=t.split(".");e[e.length-1]!==this.format&&(t=t+"."+this.format),this.downloadUI.completed(s,t)}}freeThreads(){this.threads--,this.threads<0&&(this.threads=0)}async fetch(){if(!(this.threads>=this.threadsLimit))if(this.threads++,this.downloadUI.setThreads(this.threads),"pause"===this.status||"error"===this.status||"cancel"===this.status||"completed"===this.status)this.freeThreads(),this.downloadUI.setThreads(this.threads);else{if(29<this.requestError)this.status="pause",this.downloadUI.pause(!0);else{this.fetch();for(const s of this.fragments)if("pending"===s.status){s.status="running";var t={},t=(1<this.fragmentsCount&&(t.Range="bytes="+s.start+"-"+s.end),await e(this.url,t,this.method));if(!t.ok)return this.requestError++,this.freeThreads(),s.status="pending",this.fetch(),void this.downloadUI.setErrorRequest(this.requestError);if("cancel"===this.status)return void this.freeThreads();s.data=t.content,s.status="completed";t=s.data.byteLength||s.data.length;return this.sizePrev=this.sizePrev+t,this.cached=this.cached+t,this.downloadUI.setProgress(this.size,this.cached),this.freeThreads(),void this.fetch()}this.completed()}this.freeThreads()}}async flush(){for(;0<this.threads;)await a(1e3);var t;await a(200);let s=[];for(t of this.fragments){if(!t.data)return null;s.push(t.data),t.data=null}this.downloadUI.flushing();var e=new Blob(s,{type:this.contentType});return s=null,URL.createObjectURL(e)}}})})(this);